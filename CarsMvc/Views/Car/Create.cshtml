@model CarCreateViewModel

@{
    ViewBag.Title = "Create";
}

@section LeftPanel{
    <div class="panel-heading">Car > Create</div>
    <div class="panel-body ">
        @using (var createForm = Html.BeginForm("Create", "Car", new { controller = "Car", action = "create" }, FormMethod.Post, new { @class = "form" }))
        {
            @Html.AntiForgeryToken();
            <div class="form-group @(Html.ViewData.ModelState.IsValidField("TypeCarId") ? "" : "has-error has-feedback") edit-profile">
                <p>Type </p>
                @Html.DropDownListFor(m => m.TypeCarId,new SelectList(Types.All(),"ID","Name",null))
                @if (!Html.ViewData.ModelState.IsValidField("TypeCarId"))
                {
                    <span class="glyphicon glyphicon-remove form-control-feedback"></span>
                }
            </div>
            <div class="form-group @(Html.ViewData.ModelState.IsValidField("BrandId") ? "" : "has-error has-feedback") edit-profile">
                <p>Brand </p>
                @Html.DropDownListFor(m => m.BrandId,new SelectList(Brands.All(),"ID","Name",null))
                @if (!Html.ViewData.ModelState.IsValidField("BrandId"))
                {
                    <span class="glyphicon glyphicon-remove form-control-feedback"></span>
                }
            </div>
            
            <div class="form-group @(Html.ViewData.ModelState.IsValidField("Color") ? "" : "has-error has-feedback") edit-profile">
                @Html.LabelFor(m => m.Color)
                @Html.TextBoxFor(m => m.Color, new { placeholder = "Color", @class = "form-control" })
                @if (!Html.ViewData.ModelState.IsValidField("Color"))
                {
                    <span class="glyphicon glyphicon-remove form-control-feedback"></span>
                }
            </div>
            <div class="form-group @(Html.ViewData.ModelState.IsValidField("Comment") ? "" : "has-error has-feedback") edit-profile">
                @Html.LabelFor(m => m.Comment)
                @Html.TextBoxFor(m => m.Comment, new { placeholder = "Comment", @class = "form-control", rows = "3" })
                @if (!Html.ViewData.ModelState.IsValidField("Comment"))
                {
                    <span class="glyphicon glyphicon-remove form-control-feedback"></span>
                }
            </div>
            <div class="form-group @(Html.ViewData.ModelState.IsValidField("DatePublish") ? "" : "has-error has-feedback") edit-profile">
                @Html.LabelFor(m => m.DatePublish)
                @Html.TextBoxFor(m => m.DatePublish, new { placeholder = "Date Publish", @class = "form-control", rows = "3" })
                @if (!Html.ViewData.ModelState.IsValidField("DatePublish"))
                {
                    <span class="glyphicon glyphicon-remove form-control-feedback"></span>
                }
            </div>
            <div class="form-group @(Html.ViewData.ModelState.IsValidField("Email") ? "" : "has-error has-feedback") edit-profile">
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email, new { placeholder = "Email", @class = "form-control", rows = "3" })
                @if (!Html.ViewData.ModelState.IsValidField("Email"))
                {
                    <span class="glyphicon glyphicon-remove form-control-feedback"></span>
                }
            </div>
            <div class="form-group @(Html.ViewData.ModelState.IsValidField("HasAirConditioning") ? "" : "has-error has-feedback") edit-profile">
                @Html.LabelFor(m => m.HasAirConditioning)
                @Html.TextBoxFor(m => m.HasAirConditioning, new { placeholder = "HasAirConditioning", @class = "form-control", rows = "3" })
                @if (!Html.ViewData.ModelState.IsValidField("HasAirConditioning"))
                {
                    <span class="glyphicon glyphicon-remove form-control-feedback"></span>
                }
            </div>
            <div class="form-group @(Html.ViewData.ModelState.IsValidField("Year") ? "" : "has-error has-feedback") edit-profile">
                @Html.LabelFor(m => m.Year)
                @Html.TextBoxFor(m => m.Year, new { placeholder = "Year", @class = "form-control", rows = "3" })
                @if (!Html.ViewData.ModelState.IsValidField("Year"))
                {
                    <span class="glyphicon glyphicon-remove form-control-feedback"></span>
                }
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        }
    </div>
}
